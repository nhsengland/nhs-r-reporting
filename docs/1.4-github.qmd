---
title: NHS England GitHub
subtitle: "Version Control and Deployment"
---

- Official NHS England GitHub Organisation: [github.com/nhsengland](https://github.com/nhsengland)
- To request membership email: [github@england.nhs.uk](mailto:github@england.nhs.uk)
- You can also request to join a team or set one up for your department.
- You can use your personal GitHub account if you also do open-source work.

::: {.callout-note}
## Note
Two Factor Authorisation must be switched on for all members.

:::

::: {.callout-warning}
## Warning
Currently private repos are set to viable for all members. This org level setting is under review.

:::

## GitHub Desktop

Note that the [GitHub desktop app](https://desktop.github.com/) is available on Modern Desktop (see `Company Portal > Apps`) and can be installed on UDAL VMs. The tool greatly improves the Git experience and makes managing multiple software projects much easier.

![](figures/github-desktop.png)

## Resources

- [GitHub Features](https://github.com/features) (GitHub)
- [Intro to Git](https://nhsdigital.github.io/rap-community-of-practice/training_resources/git/intro-to-git/) (NHS Digital RAP)
- [Ways of Working](https://github.com/nhsengland/github-WoW) (NHS England - Draft)
- [Version Control](https://ukgovdatascience.github.io/rap_companion/vs.html) (GOV.Data Sci)
- [Publishing Code](https://nhsdigital.github.io/rap-community-of-practice/implementing_RAP/how-to-publish-your-code-in-the-open/) (NHS Digital RAP)
- [Social Coding](https://nhsdigital.github.io/rap-community-of-practice/training_resources/git/using-git-collaboratively/) (NHS Digital RAP)

## GitHub Pages

Publish a Quarto website project to your GitHub pages using GitHub actions.

### Add the GitHub Actions workflow to your project

Copy [quarto-publish.yml](https://github.com/craig-shenton/nhs-r-reporting/blob/main/_assets/actions/quarto-publish-example.yml) to the folder `.github/workflows/quarto-publish.yml`.

```yaml
on:
  push:
    branches: main
  pull_request:
    branches: main

name: Render and Publish

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        
      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2

      - name: Publish to GitHub Pages (and render)
        uses: quarto-dev/quarto-actions/publish@v2
        with:
          target: gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
```

::: {.callout-note}
If your Quarto project is not in the top level folder of your repository (in this case in `/docs`), then add the following path to the 'Publish to GitHub Pages (and render)' action: 

```yaml
- name: Publish to GitHub Pages (and render)
  uses: quarto-dev/quarto-actions/publish@v2
  with:
    target: gh-pages
    path: docs
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
```
:::

::: {.callout-warning}
Do *not* edit the `GITHUB_TOKEN` to add a personal secret to this file. This file has the same permissions as your repository, and might be publicly readable.
:::
   
### Configure the repository before publishing

Quarto needs to configure the repository for publishing through GitHub Actions. To do this, run `quarto publish gh-pages` locally once.

### Commit and push the workflow

Now, add and commit the workflow file you have just created, and push the result to GitHub. This should trigger a new action from GitHub that will automatically render and publish your website through GitHub pages.

::: {.callout-note}
Note that GitHub Pages uses a `gh-pages` branch in your repository, which will be automatically created if one doesn't exist.
:::